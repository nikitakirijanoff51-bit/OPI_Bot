import os
import telebot
from flask import Flask, request
import pandas as pd
import threading
import time

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
RENDER_EXTERNAL_URL = os.getenv("RENDER_EXTERNAL_URL")

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# === Excel —Ñ–∞–π–ª ===
EXCEL_FILE = "data.xlsx"
if not os.path.exists(EXCEL_FILE):
    df = pd.DataFrame(columns=["–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ", "#–°–∫–≤–∞–∂–∏–Ω—ã", "–°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"])
    df.to_excel(EXCEL_FILE, index=False)
    print("üìò –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª data.xlsx")
else:
    print("üìó –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª data.xlsx")

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ===
@bot.message_handler(commands=["start"])
def start_handler(message):
    try:
        bot.send_message(
            message.chat.id,
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–∫–≤–∞–∂–∏–Ω.\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚ûï /add –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
            "üìã /show ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É."
        )
        print(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.chat.id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ /start: {e}")

@bot.message_handler(commands=["add"])
def add_handler(message):
    try:
        parts = message.text.split(" ", 4)
        if len(parts) < 5:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /add –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
            return

        _, mest, well, status, comment = parts
        df = pd.read_excel(EXCEL_FILE)
        df.loc[len(df)] = [mest, well, status, comment]
        df.to_excel(EXCEL_FILE, index=False)
        bot.send_message(message.chat.id, "‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        print(f"üü¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {mest}, {well}, {status}, {comment}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ /add: {e}")
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=["show"])
def show_handler(message):
    try:
        df = pd.read_excel(EXCEL_FILE)
        if df.empty:
            bot.send_message(message.chat.id, "üìÇ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞.")
            return
        text = ""
        for _, row in df.iterrows():
            text += (
                f"üè≠ {row['–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ']} | "
                f"‚õΩ {row['#–°–∫–≤–∞–∂–∏–Ω—ã']} | "
                f"üìä {row['–°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è']} | "
                f"üí¨ {row['–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']}\n"
            )
        bot.send_message(message.chat.id, text[:4000])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ /show: {e}")
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏: {e}")

# === Flask webhook ===
@app.route("/webhook", methods=["POST"])
def webhook():
    try:
        json_str = request.get_data(as_text=True)
        update = telebot.types.Update.de_json(json_str)
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        threading.Thread(target=bot.process_new_updates, args=([update],), daemon=True).start()
        print(f"üì© –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {update.message.text if update.message else '–Ω–µ—Ç message'}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ webhook: {e}")
    return "OK", 200

@app.route("/")
def index():
    return "‚úÖ –ë–æ—Ç –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ webhook!"

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook ===
def setup_webhook():
    webhook_url = f"{RENDER_EXTERNAL_URL}/webhook"
    bot.remove_webhook()
    time.sleep(1)
    success = bot.set_webhook(url=webhook_url)
    print(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {success} ({webhook_url})")

# === –ó–∞–ø—É—Å–∫ Flask ===
if __name__ == "__main__":
    setup_webhook()
    port = int(os.getenv("PORT", 10000))
    print(f"üöÄ Flask –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)
